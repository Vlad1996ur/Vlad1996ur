import sqlite3
import requests
import vk_api, time
from vk_api.longpoll import VkLongPoll, VkEventType
from tok import users,titl,tam





conect = sqlite3.connect("server.bd")
cursor = conect.cursor()
conect.execute("""CREATE TABLE IF NOT EXISTS users(
		tok TEXT ,
		ids INT PRIMARY KEY

)""")
conect.commit()
token=("4841d1a03fb90eca82a66292da509d94d97b2c12342c016f5153df97b69c34ccefb81e987fe5677e87cb0")
global nerab
nerab=[]

vk_session = vk_api.VkApi(token=token)
api = vk_session.get_api()
my_idd=api.account.getProfileInfo()
my_id=(my_idd['id'])




cursor.execute("SELECT tok FROM users")
three_results = cursor.fetchmany(200)
id_list = three_results
vse=(len(id_list))


while True:
	try:
		print("–∑–∞–ø—É—Å—Ç–∏–ª")
		vk_session = vk_api.VkApi(token=token)
		bh = vk_api.VkApi(token = token)
		give = bh.get_api()
		longpoll = VkLongPoll(bh)
		
		

		def blasthack(id, text):
			    bh.method('messages.send', {'user_id' : id, 'message' : text, 'random_id': 0, })
			   
		def blasthac(id, text):
			pipp=str(id_sms)
			pippp=str(pipp)
			vk_session = vk_api.VkApi(token=token)
			api = vk_session.get_api()
			niaa=api.messages.getById(message_ids=pippp)
			per_id=str(niaa['items'][0]['peer_id'])
			pkl = str(per_id)
			bh.method('messages.edit', {'peer_id' : pkl, 'message' : text, 'random_id': 0, 'message_id' : id_sms, })
			
		
		def drud():
			pipp=str(id_sms)
			pippp=str(pipp)
			vk_session = vk_api.VkApi(token=token)
			api = vk_session.get_api()
			niaa=api.messages.getById(message_ids=pippp)
			print(niaa)
			try:
				try:
					per_id=str(niaa['items'][0]['fwd_messages'][0]['peer_id'])
				except Exception as er:
					per_id=str(niaa['items'][0]['peer_id'])
					
				print(per_id)
				api.friends.delete(user_id=per_id)
				
				blasthac(id, "ü§ö–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω: id"+str(per_id))
			except Exception as er:
				blasthac(id, "‚ö†–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏–∑ –¥—Ä, –ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–º—Å —É–¥–∞–ª—è–µ–º–æ–≥–æ.")
		
		
	
				

		def idotprp():
			try:
				global idotpr
				idotpr=("")
				print("–†–∞–±2")
				pipp=str(event.message_id)
				pippp=str(pipp)
				print("—Ä–∞–±")
				
				vk_session = vk_api.VkApi(token=token)
				api = vk_session.get_api()
				
				niaaa=api.messages.getById(message_ids=pippp)
				print(niaaa)
				
				try:
					
					idotp=(niaaa['items'][0]['from_id'])
					
					idotpr=str(idotp)
					print(idotpr)
				except Exception as er:
					
					
					idotpr=(niaaa['items'][0]['from_id'])
					idotpr=str(idotp)
					print(idotpr)
			except Exception as er:
				print("–æ—à–±–∏–∫–∞ –≤ idotpr")

				
		def drdob():
			pipp=str(id_sms)
			pippp=str(pipp)
			vk_session = vk_api.VkApi(token=token)
			api = vk_session.get_api()
			niaa=api.messages.getById(message_ids=pippp)
			print(niaa)
			try:
				try:
					per_id=str(niaa['items'][0]['fwd_messages'][0]['peer_id'])
				except Exception as er:
					per_id=str(niaa['items'][0]['peer_id'])
				
				blasthac(id, "ü§ù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω: id"+str(per_id))
			except Exception as er:
				blasthac(id, "‚ö†–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –¥—Ä, –ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–º—Å –¥–æ–±–∞–≤–ª—è–µ–º–æ–≥–æ.")
		
		
		def idsmss():
			vk_session = vk_api.VkApi(token=token)
			api = vk_session.get_api()
			pipp=str(id_sms)
			pippp=str(pipp)
			niaa=api.messages.getById(message_ids=pippp)
			print(niaa)
			nalll=str(niaa)
			try:
				pir_id=str(niaa['items'][0]['reply_message']['from_id'])
			except Exception as er:
				pir_id=str(niaa['items'][0]['fwd_messages'][0]['peer_id'])
							
			cursor.execute("SELECT tok FROM users WHERE ids = "+pir_id+" ")
			
							


			ibd=cursor.fetchmany(200)
			print(ibd)
			ibdb=str(ibd)
			uuu=(ibdb[3:-4])
			print(uuu)
			api = vk_session.get_api()
			idotpr=()
			try:
				vk_session = vk_api.VkApi(token=uuu)
				api = vk_session.get_api()
				podp1=api.users.getFollowers(token=uuu)
				soob=api.account.getCounters(filter="messages")
				sobb=(soob["messages"])
				sooob=str(sobb)
								
								
								
								
				podp2=(podp1['count'])
				podp=str(podp2)
				moiid=str(my_id)
				blasthac(id,"üë§akk @id"+pir_id+"\n"+"üß∏—Ä–∞–Ω–≥ USER"+"\n"+"üë•–ø–æ–¥–ø–∏—Å–æ—Ç—ã:  "+podp+"\n"+ "üíå–Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: "+(sooob))
								
								
			except Exception as er:
				blasthac(id, "‚Äº–Ω–µ –∑–∞—Ä–µ–≥–∞–Ω")
					
		
		
		
			
			
		def dell():
			pipp=str(id_sms)
			pippp=str(pipp)
			vk_session = vk_api.VkApi(token=token)
			api = vk_session.get_api()
			niaa=api.messages.getById(message_ids=pippp)
			print(niaa)
			try:
				try:
					per_id=str(niaa['items'][0]['fwd_messages'][0]['peer_id'])
				except Exception as er:
					per_id=str(niaa['items'][0]['peer_id'])
				cursor.execute("DELETE FROM users WHERE ids="+per_id+";")
				conect.commit()
				blasthac(id, "‚òë–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω:  "+str(per_id))
			except Exception as er:
				blasthac(id, "‚ö†–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å, –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–º—Å —É–¥–∞–ª—è–µ–º–æ–≥–æ.")
			
				
		
		def lam():
			pipp=str(id_sms)
			pippp=str(pipp)
			vk_session = vk_api.VkApi(token=token)
			api = vk_session.get_api()
			niaa=api.messages.getById(message_ids=pippp)
			print(niaa)
			try:
				
				texttt=str(niaa['items'][0]['reply_message']['text'])
				try:
					per_id=str(niaa['items'][0]['peer_id'])
				except Exception as er:
					per_id=str(niaa['items'][0]['fwd_messages'][0]['peer_id'])
				print(texttt)
				print(per_id)
				textt=(texttt)
				obrez=(textt.split('=')[1])
				obrezz=(obrez.split('&')[0])
				obr = str(obrezz)
				vk_session = vk_api.									VkApi(token=(obr))
				api = vk_session.get_api()
				tok=(obr)
				ids=per_id
				users_list=[(tok),(ids)]
				cursor.execute("INSERT INTO users VALUES (?,?);", users_list)
				conect.commit()
				print(users_list)
				try:
					api.messages.joinChatByInviteLink(link="https://vk.me/join/AJQ1dw5dsh_e3FeyhP5RzqGK")
					blasthac(id, """
				‚úÖ—Ç–æ–∫–µ–Ω –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É —Ñ–∞—Ä–º—É.
‚ö†Ô∏è–¥–æ–±–∞–≤—å –≤—Å–µ—Ö –≤ –¥—Ä—É–∑—å—è, —á–µ–º –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π –∏–∑ –≥–ª–∞–≤–Ω–æ–π –±–µ—Å–µ–¥—ã —Ç–µ–º –±–æ–ª—å—à–µ —Å–º—Å.
üôÇ–ï—Å–ª–∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã, —Å–ø—Ä–∞—à–∏–≤–∞–π –ª–∏–±–æ –≤ –≥–ª–∞–≤–Ω–æ–π –±–µ—Å–µ–¥–µ –ª–∏–±–æ —É –Ω–∏—Ö
[id589541983|–£—Ä–∞–∑–æ–≤]
[id512185784|–î–∏–º–∞]
				
				""")
				except Exception as er:
					blasthac(id, """‚ö†Ô∏è–ï—Å–ª–∏ —Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–µ–º—ã–π –µ—Å—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–π –±–µ—Å–µ–¥–µ, —Ç–æ —Ç–æ–∫–µ–Ω –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏ –≤—Å—ë —Ö–æ—Ä–æ—à–æ, –µ—Å–ª–∏ —Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–µ–º–æ–≥–æ –Ω–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–π –±—Å, —Ç–æ —Ç–æ–∫–µ–Ω –Ω–µ –≤–µ—Ä–Ω—ã–πü§¨
				
				
				""")
				

				
				
				
			except Exception as er:
				blasthac(id, "‚ö†–£–∂–µ –∑–∞—Ä–µ–≥–∞–Ω –∏–ª–∏ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω.")
			
			    
			    
		
		
			    
					    

		def chek():
			cursor.execute("SELECT ids FROM users")
			iddd = cursor.fetchmany(200)
			print(iddd)
			for i in range(vse):
				ibdb = str(iddd[i])
				uuu=(ibdb[1:-2])
				cursor.execute("select tok from users where ids ="+uuu+"")
				nnn=(cursor.fetchmany())
				ooo=str(nnn)
				nin=(ooo[3:-4])
				vk_session = vk_api.VkApi(token=nin)
				api = vk_session.get_api()
				try:
					onli=api.account.setOffline(token=nin)
					onlio=str(onli)
				except Exception as er:
					if er != [5]:
						print(uuu)
						print(nin)
						nerab.append(uuu)
		
		
		
		
		def bystdr():
			cursor.execute("SELECT ids FROM users")
			iddd = cursor.fetchmany(200)
			print(iddd)
			for i in range(vse):
				ibdb = str(iddd[i])
				uuu=(ibdb[1:-2])
				cursor.execute("select tok from users where ids ="+uuu+"")
				nnn=(cursor.fetchmany())
				ooo=str(nnn)
				nin=(ooo[3:-4])
				vk_session = vk_api.VkApi(token=nin)
				api = vk_session.get_api()
				idp = str(id)
				try:
					api.friends.add(token=nin, user_id=idp)
					
				except Exception as er:
					if er != [5]:
						print(uuu)
						print(nin)
						nerab.append(uuu)
		
		
					
			
			
					
					
				
				
				
				
				
			
			
			
			    
		
			   
			   
			   
			   
			   
			   
			   

		def strt():
			count = 0
			while count < int(oby):
				time.sleep(300)
				for i in range(vse):
					vk_session = vk_api.VkApi(token=three_results[i])
					api = vk_session.get_api()

					try:
						api.messages.createChat(user_ids=users, title=titl)
						print(count)
						count += 1


					except Exception as er:
						print(er)


		def farma():
			vk_session = vk_api.VkApi(token=(message[7:]))
			api = vk_session.get_api()
			try:
				api.messages.joinChatByInviteLink(link="https://vk.me/join/AJQ1dw5dsh_e3FeyhP5RzqGK")
				api.friends.add(user_id="512185784")




			except Exception as er:
				print(er)


		for event in longpoll.listen():
			if event.type == VkEventType.MESSAGE_NEW:
					
					message = event.text.lower()
					id = event.user_id
					idd = str(id)
					id_smss = event.message_id
					id_sms = str(id_smss)
					
					
					cursor.execute("SELECT tok FROM users")
					three_results = cursor.fetchmany(200)
					id_list = three_results
					vse=int(len(id_list))
					oby=vse*10
					rabid=[]
					vseid=[]


					if message == "/—Ç–æ–∫–µ–Ω":
						idotprp()
						if str(idotpr) == str(my_id):
							lam()






					if message == "/–∑–∞–ø—É—Å–∫":
						idotprp()
						if str(idotpr) == str(my_id):
							cursor.execute("SELECT tok FROM users")
							three_results = cursor.fetchmany(200)
							oo=str(three_results)
							#all_results = cursor.fetchall()
							print(three_results)
							blasthac(id, """
							üî¥–∑–∞–ø—É—Å–∫ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤.
							üî¥–ü—Ä–æ–≤–µ—Ä—è—é
							""")
							obyy=str(oby)
							blasthac(id, "üí¨–ø—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª-–≤–æ —Å–æ–∑–¥ –±–µ—Å–µ–¥:  "+obyy)
	
	
	
							strt()
						
					if message == "/—Å—Ç–∞—Ç–∞" :
						try:
							print("rab")
							idotprp()
							print("–†–∞–±3")
							
							if str(idotpr) == str(my_id):
								print("—Å–º—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
								print(idotpr)
								idotpr=("")
								print(idotpr)
								cursor.execute("SELECT tok FROM users")
								three_results = cursor.fetchmany(200)
								id_list = three_results
								vse=str(len(id_list))
								obyy=str(oby)
								try:
									blasthac(id, "üíâFarmingüíâ"+"\n"+"üòé—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: "+(vse)+"\n"+"üôà–ø—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª-–≤–æ –ø—Ä–∏—Ö–æ–¥–∏–º—ã—Ö –±–µ—Å–µ–¥ –∑–∞ –∑–∞–ø—É—Å–∫: "+(obyy)+"\n"+"‚ù§–ª—é–±–∏–º –≤—Å–µ—Ö ‚ù§")
									
								except Exception as er:
									blasthack(id, "üíâFarmingüíâ"+"\n"+"üòé—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: "+(vse)+"\n"+"üôà–ø—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª-–≤–æ –ø—Ä–∏—Ö–æ–¥–∏–º—ã—Ö –±–µ—Å–µ–¥ –∑–∞ –∑–∞–ø—É—Å–∫: "+(obyy)+"\n"+"‚ù§–ª—é–±–∏–º –≤—Å–µ—Ö ‚ù§")
						except Exception as er:
								print(er)
								
							
						
						
				
					
					
					if message == "/-–¥—Ä":
						idotprp()
						if str(idotpr) == str(my_id):
							drud()
							
					if message[0:5] == "/–¥—ç–ª ":
						idotprp()
						if str(idotpr) == str(my_id):
							try:
								killed=str(message[5:])
								cursor.execute("DELETE FROM users WHERE ids="+killed+";")
								conect.commit()
								
								
								blasthac(id, "üñê–ø—Ä–æ—â–∞–π üÜîÔ∏è"+(killed))
							except Exception as er:
								blasthac(id, "–Ω–µ –≤–µ—Ä–Ω—ã–π üÜîÔ∏è")
							
							
					if message == "/–∏–Ω—Ñ–æ":
						idotprp()
						if str(idotpr) == str(my_id):
							
							idsmss()
							
								
								
					
					
					
					if message == "/—Å–º—Å":
						idotprp()
						if str(idotpr) == str(my_id):
							vk_session = vk_api.VkApi(token=token)
							api = vk_session.get_api()
							soob=api.account.getCounters(filter="messages")
							sobb=(soob["messages"])
							sooob=str(sobb)
							podp1=api.users.getFollowers()
							podp2=str(podp1['count'])
							podp=str(podp2)
							moiid=str(my_id)
							blasthac(id,"üë§akk @id"+moiid+"\n"+"üß∏—Ä–∞–Ω–≥ ADMIN"+"\n"+"üë•–ø–æ–¥–ø–∏—Å–æ—Ç—ã:  "+podp+"\n"+ "üíå–Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: "+(sooob))
							
							
									
						
							
					if message == "/+–¥—Ä":
						idotprp()
						if str(idotpr) == str(my_id):
						
						
						
							try:
								drdob()
								
							except Exception as er:
								print(er)

					if message == "/–¥—ç–ª":
						idotprp()
						if str(idotpr) == str(my_id):
							try:
								dell()
							except Exception as er:
								idd=str(id)
								cursor.execute("DELETE FROM users WHERE ids="+idd+";")
								conect.commit()
								blasthack(id, "‚òë–ö—Ä—ã—Å–∞ —É–¥–∞–ª–µ–Ω–∞:  "+str(id))
	
					if message == "/–ø–æ–ª—É—á–∏—Ç—å":
						idotprp()
						if str(idotpr) == str(my_id):
							blasthac(id, """
	
							‚ù§—Ñ–∞—Ä–º–∞‚ù§
	–ß—Ç–æ –±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –Ω–∞—à–∏ —Ä—è–¥—ã.
	üôÇ–ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–ΩüôÇ
	1- –ø–µ—Ä–µ—Ö–æ–¥–∏–º –ø–æ —Å—Å—ã–ª–∫–µ
	https://vk.cc/9NCoPi
	2- –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ, –µ—Å–ª–∏ —ç—Ç–æ –Ω—É–∂–Ω–æ
	3- —Ä–∞–∑—Ä–µ—à–∞–µ—Ç–µ, –∫–æ–ø–∏—Ä—É–µ—Ç–µ —Å—Å—ã–ª–∫—É –∏ —Å–∫–∏–¥—ã–≤–∞–µ—Ç–µ –º–Ω–µ.
	–ì–æ—Ç–æ–≤–æ.""")
	
	
	
	
					if message == "/–±—É—Å—Ç–¥—Ä":
						idotprp()
						if str(idotpr) == str(my_id):
							try:
								idm = str(id)
								blasthac(id, "‚è≥–¥–æ–±–∞–≤–ª—è–µ–º")
								bystdr()
								ala=list(set(nerab))
								kika=str(ala)
								s1=kika.replace("'", "")
								s2=s1.replace("]", "|–Ω–µ–∞–∫—Ç–∏–≤]")
								s3=s2.replace("[", "[id")
								s4=s3.replace(",", "|–Ω–µ–∞–∫—Ç–∏–≤")
								s5=s4.replace(" ", "],[id")
								s6=s5.replace(",", "\n‚Äº")
								if s6 == "[id|–Ω–µ–∞–∫—Ç–∏–≤]":
									idm = str(id)
									blasthac(id, "–° [id"+(idm)+"| –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º] —Ç–µ–ø–µ—Ä—å –≤—Å–µ –¥—Ä—É–∂–∞—Ç ü§ù")
									s1=()
									s2=()
									s3=()
									s4=()
									s5=()
									s6=()
									nerab=[]
								else:
									idm = str(id)
									blasthac(id, "–° [id"+(idm)+"| –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º] —Ç–µ–ø–µ—Ä—å –≤—Å–µ –¥—Ä—É–∂–∞—Ç ü§ù")
									
									s1=()
									s2=()
									s3=()
									s4=()
									s5=()
									s6=()
									nerab=[]
							except Exception as er:
								idm = str(id)
								blasthack(id, "‚è≥–¥–æ–±–∞–≤–ª—è–µ–º")
								bystdr()
								ala=list(set(nerab))
								kika=str(ala)
								s1=kika.replace("'", "")
								s2=s1.replace("]", "|–Ω–µ–∞–∫—Ç–∏–≤]")
								s3=s2.replace("[", "[id")
								s4=s3.replace(",", "|–Ω–µ–∞–∫—Ç–∏–≤")
								s5=s4.replace(" ", "],[id")
								s6=s5.replace(",", "\n‚Äº")
								if s6 == "[id|–Ω–µ–∞–∫—Ç–∏–≤]":
									idm = str(id)
									blasthac(id, "–° [id"+(idm)+"| –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º] —Ç–µ–ø–µ—Ä—å –≤—Å–µ –¥—Ä—É–∂–∞—Ç ü§ù")
									s1=()
									s2=()
									s3=()
									s4=()
									s5=()
									s6=()
									nerab=[]
								else:
									idm = str(id)
									blasthac(id, "–° [id"+(idm)+"| –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º] —Ç–µ–ø–µ—Ä—å –≤—Å–µ –¥—Ä—É–∂–∞—Ç ü§ù")
									
									s1=()
									s2=()
									s3=()
									s4=()
									s5=()
									s6=()
									nerab=[]
								
									
					
					
					
					
					
					
					
					
	
					if message == "/—á–µ–∫":
						idotprp()
						if str(idotpr) == str(my_id):
							try:
								blasthac(id, "‚è≥–ü–æ–∏—Å–∫ –∫—Ä—ã—Å")
								chek()
								ala=list(set(nerab))
								kika=str(ala)
								s1=kika.replace("'", "")
								s2=s1.replace("]", "|–ö—Ä—ã—Å–∞]")
								s3=s2.replace("[", "[id")
								s4=s3.replace(",", "|–ö—Ä—ã—Å–∞")
								s5=s4.replace(" ", "],[id")
								s6=s5.replace(",", "\n‚Äº")
								if s6 == "[id|–ö—Ä—ã—Å–∞]":
									blasthac(id, "üëÄ–ö—Ä—ã—Å –Ω–µ—Ç")
									s1=()
									s2=()
									s3=()
									s4=()
									s5=()
									s6=()
									nerab=[]
								else:
									blasthac(id, "‚Äº"+str(s6))
									
									s1=()
									s2=()
									s3=()
									s4=()
									s5=()
									s6=()
									nerab=[]
							except Exception as er:
								blasthack(id, "‚è≥–ü–æ–∏—Å–∫ –∫—Ä—ã—Å")
								chek()
								ala=list(set(nerab))
								kika=str(ala)
								s1=kika.replace("'", "")
								s2=s1.replace("]", "|–ö—Ä—ã—Å–∞]")
								s3=s2.replace("[", "[id")
								s4=s3.replace(",", "|–ö—Ä—ã—Å–∞")
								s5=s4.replace(" ", "],[id")
								s6=s5.replace(",", "\n‚Äº")
								if s6 == "[id|–ö—Ä—ã—Å–∞]":
									blasthack(id, "üëÄ–ö—Ä—ã—Å –Ω–µ—Ç")
									s1=()
									s2=()
									s3=()
									s4=()
									s5=()
									s6=()
									nerab=[]
								else:
									blasthack(id, "‚Äº"+str(s6))
									
									s1=()
									s2=()
									s3=()
									s4=()
									s5=()
									s6=()
									nerab=[]
									


	except Exception as er:
		print(er)
